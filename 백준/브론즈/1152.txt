package basic;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.lang.reflect.Array;
import java.util.Arrays;
import java.util.StringTokenizer;



public class Main {
    public static void main(String[] args) throws IOException {
//1152번. 단어의 개수. 내 실력으로 풀음.
    	BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    	
    	// 공백기준으로 단어입력 받고, 
    	StringTokenizer st = new StringTokenizer(br.readLine()," ");
    	
    	
    	int num = 0;
    	// 단어(토큰)들이 없을때까지, 루프를 돈다.
    	while(st.hasMoreTokens()) {
    		// 해당순서의 토큰을 문자열로 입력받고
    		String word = st.nextToken();
    		// 단어의 개수를 표현해야하니 , num을 더해준다 1씩.
    		num++;
    	}
    	
    	System.out.println(num);
    }
}



---------------------------------------------------------------------------------------------------

다른사람의 답

package basic;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.lang.reflect.Array;
import java.util.Arrays;
import java.util.StringTokenizer;



public class Main {
    public static void main(String[] args) throws IOException {
    	
    	BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    	
    	StringTokenizer st = new StringTokenizer(br.readLine()," ");
    	System.out.println(st.countTokens()); // 카운트토큰 메소드를 사용하면, 토큰 수를 헤아릴수 있는거같다.
    }
}


---------------------------------------------------------------------------------------------------


package basic;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.lang.reflect.Array;
import java.util.Arrays;
import java.util.StringTokenizer;



public class Main {
    public static void main(String[] args) throws IOException {
    	
    	int count = 0;
    	int pre_str = 32; // 아스키값을 공백
    	int str;
    	
    	while(true) {
    		str = System.in.read();
    		
    		//입력문자가 공백일떄,
    		if(str == 32) {
    			//이전의 문자가 공백이 아니면
    			if(pre_str != 32) count++;
    		}
    		
    		// 입력문자가 개행일때
    		else if(str == 10) {
    			// 이전 문자가 공백이 아니면
    			if(pre_str != 32) count++;
    			break;
    		}
    		
    		pre_str = str;
    	}
    	
    	System.out.println(count);
    }
}



